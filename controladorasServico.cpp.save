#include "controladorasServico.h"
#include "comandos.h"

bool CntrServicoInvestimentos::executar(Carteira& carteira, int opcao){
    ComandoServicoInvestimentosCarteira *comando;

    switch(opcao){
        case CRIAR_CARTEIRA: comando = new ComandoServicoInvestimentosCarteiraCriar();
        if(comando->executar(carteira)){
            delete comando;
            return true;
        }
        delete comando;
        return false;

        case LER_CARTEIRA:comando = new ComandoServicoInvestimentosCarteiraLer();
        if(comando->executar(carteira)){
            delete comando;
            return true;
        }
        delete comando;
        return false;

        case EDITAR_CARTEIRA: comando = new ComandoServicoInvestimentosCarteiraEditar();
        if(comando->executar(carteira)){
            delete comando;
            return true;
            }
            delete comando;
            return false;

        case EXCLUIR_CARTEIRA: comando = new ComandoServicoInvestimentosCarteiraExcluir();
        if(comando->executar(carteira)){
            delete comando;
            return true;
            }
        delete comando;
        return false;

        }
        delete comando;
        return false;

        }
}

bool CntrServicoInvestimentos::executar(Ordem& ordem, int opcao){
    ComandoServicoInvestimentosOrdem *comando;

    switch(opcao){
        case CRIAR_ORDEM: comando = new ComandoServicoInvestimentosOrdemCriar();
        if(comando->executar(ordem)){
            delete comando;
            return true;
        }
        delete comando;
        return false;

        case LER_ORDEM:comando = new ComandoServicoInvestimentosOrdemLer();
        if(comando->executar(ordem)){
            delete comando;
            return true;
        }
        delete comando;
        return false;

        case EXCLUIR_ORDEM: comando = new ComandoServicoInvestimentosOrdemExcluir();
        if(comando->executar(ordem)){
            delete comando;
            return true;
            }
        delete comando;
        return false;

        case LISTAR_ORDENS: comando = new ComandoServicoInvestimentosOrdemListar();
        if(comando->executar(ordem)){
            delete comando;
            return true;
        }
        delete comando;
        return false;

        }
}

list<Carteira> CntrServicoInvestimentos::listarCarteiras(Cpf cpf){
    Codigo codigo;
    codigo.setValor("12345");
    Nome nome;
    nome.setValor("Juliana Stuart");
    Perfil perfil;
    perfil.setValor("Agressivo");

    Carteira carteira1;

    carteira1.setCpf(cpf);
    carteira1.setCodigo(codigo);
    carteira1.setNome(nome);
    carteira1.setPerfil(perfil);

    codigo.setValor("67890");
    nome.setValor("Pedro Afonso");
    perfil.setValor("Moderado");

    Carteira carteira2;

    carteira2.setCpf(cpf);
    carteira2.setCodigo(codigo);
    carteira2.setNome(nome);
    carteira2.setPerfil(perfil);

    list<Carteira> carteiras;

    //gatilho para teste
    if(cpf.getValor().compare("03723725112") == 0)
        return carteiras;

    carteiras.push_back(carteira1);
    carteiras.push_back(carteira2);

    return carteiras;
}

